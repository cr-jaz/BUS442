# Form implementation generated from reading ui file 'studentscores.ui'
#
# Created by: PyQt6 UI code generator 6.8.0
#
# WARNING: Any manual changes made to this file will be lost when pyuic6 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt6 import QtCore, QtGui, QtWidgets


class Ui_studentScores(object):
    def setupUi(self, studentScores):
        studentScores.setObjectName("studentScores")
        studentScores.resize(428, 437)
        font = QtGui.QFont()
        font.setFamily("Consolas")
        font.setPointSize(9)
        studentScores.setFont(font)
        self.centralwidget = QtWidgets.QWidget(parent=studentScores)
        self.centralwidget.setObjectName("centralwidget")
        self.lstScores = QtWidgets.QListWidget(parent=self.centralwidget)
        self.lstScores.setGeometry(QtCore.QRect(90, 70, 256, 192))
        self.lstScores.setObjectName("lstScores")
        self.lblScores = QtWidgets.QLabel(parent=self.centralwidget)
        self.lblScores.setGeometry(QtCore.QRect(140, 30, 151, 20))
        self.lblScores.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        self.lblScores.setObjectName("lblScores")
        self.btnCalc = QtWidgets.QPushButton(parent=self.centralwidget)
        self.btnCalc.setGeometry(QtCore.QRect(150, 290, 131, 21))
        self.btnCalc.setObjectName("btnCalc")
        self.lblAvg = QtWidgets.QLabel(parent=self.centralwidget)
        self.lblAvg.setGeometry(QtCore.QRect(90, 340, 121, 20))
        self.lblAvg.setAlignment(QtCore.Qt.AlignmentFlag.AlignLeading|QtCore.Qt.AlignmentFlag.AlignLeft|QtCore.Qt.AlignmentFlag.AlignVCenter)
        self.lblAvg.setObjectName("lblAvg")
        self.txtAvg = QtWidgets.QLineEdit(parent=self.centralwidget)
        self.txtAvg.setGeometry(QtCore.QRect(200, 340, 151, 21))
        self.txtAvg.setReadOnly(True)
        self.txtAvg.setObjectName("txtAvg")
        studentScores.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(parent=studentScores)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 428, 17))
        self.menubar.setObjectName("menubar")
        studentScores.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(parent=studentScores)
        self.statusbar.setObjectName("statusbar")
        studentScores.setStatusBar(self.statusbar)

        self.retranslateUi(studentScores)
        QtCore.QMetaObject.connectSlotsByName(studentScores)
        
        # Create an empty dictionary to store student data
        self.student_scores_dictionary = {}
        
        self.load_data('studentscores.txt')
        
        # When the button is clicked, calculate the avg score of students
        self.btnCalc.clicked.connect(self.average)
        
    def load_data(self, file_name):
        # Open the external file in read mode
        with open(file_name, 'r') as filename:
            # Iterate over each line of the file
            for line in filename.readlines():
                # Splite the name and the score
                data = line.split(",")
                # Creating a key-value pair, 0 is the key & 1 is the value. Additionally, the strip cmd removes any white space before and after
                self.student_scores_dictionary[data[0]] = int(data[1].strip())
                # Populate the list widget with name & score (reminder: only str)
                self.lstScores.addItem(f"{data[0]}      {data[1].strip()}")
    
    def average(self):
        if(len(self.student_scores_dictionary) > 0):
            total = 0
            for v in self.student_scores_dictionary.values():
                total = total + v
            avg = total / len(self.student_scores_dictionary)
            
            self.txtAvg.setText(str(avg))
        else:
            msg = QtWidgets.QMessageBox()
            msg.setWindowTitle('Student Scores')
            msg.setText('No student data in the dictionary')
            msg.exec()
        
    
    def retranslateUi(self, studentScores):
        _translate = QtCore.QCoreApplication.translate
        studentScores.setWindowTitle(_translate("studentScores", "Student Scores"))
        self.lblScores.setText(_translate("studentScores", "Student Scores:"))
        self.btnCalc.setText(_translate("studentScores", "Calculate Average"))
        self.lblAvg.setText(_translate("studentScores", "Average Score:"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    studentScores = QtWidgets.QMainWindow()
    ui = Ui_studentScores()
    ui.setupUi(studentScores)
    studentScores.show()
    sys.exit(app.exec())

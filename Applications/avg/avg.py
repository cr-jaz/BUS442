# Form implementation generated from reading ui file 'avg.ui'
#
# Created by: PyQt6 UI code generator 6.8.0
#
# WARNING: Any manual changes made to this file will be lost when pyuic6 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt6 import QtCore, QtGui, QtWidgets


class Ui_avgScore(object):
    def setupUi(self, avgScore):
        avgScore.setObjectName("avgScore")
        avgScore.resize(800, 600)
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(9)
        avgScore.setFont(font)
        self.centralwidget = QtWidgets.QWidget(parent=avgScore)
        self.centralwidget.setObjectName("centralwidget")
        self.lblScore = QtWidgets.QLabel(parent=self.centralwidget)
        self.lblScore.setGeometry(QtCore.QRect(130, 180, 111, 31))
        self.lblScore.setObjectName("lblScore")
        self.txtScore = QtWidgets.QLineEdit(parent=self.centralwidget)
        self.txtScore.setGeometry(QtCore.QRect(250, 180, 113, 20))
        self.txtScore.setObjectName("txtScore")
        self.btnStore = QtWidgets.QPushButton(parent=self.centralwidget)
        self.btnStore.setGeometry(QtCore.QRect(270, 230, 71, 21))
        self.btnStore.setObjectName("btnStore")
        self.btnAvg = QtWidgets.QPushButton(parent=self.centralwidget)
        self.btnAvg.setGeometry(QtCore.QRect(270, 270, 71, 21))
        self.btnAvg.setObjectName("btnAvg")
        self.btnClear = QtWidgets.QPushButton(parent=self.centralwidget)
        self.btnClear.setGeometry(QtCore.QRect(270, 320, 71, 21))
        self.btnClear.setObjectName("btnClear")
        self.lstScore = QtWidgets.QListWidget(parent=self.centralwidget)
        self.lstScore.setGeometry(QtCore.QRect(400, 160, 256, 192))
        self.lstScore.setObjectName("lstScore")
        self.lblStudentScore = QtWidgets.QLabel(parent=self.centralwidget)
        self.lblStudentScore.setGeometry(QtCore.QRect(480, 120, 171, 31))
        self.lblStudentScore.setObjectName("lblStudentScore")
        avgScore.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(parent=avgScore)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 800, 17))
        self.menubar.setObjectName("menubar")
        avgScore.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(parent=avgScore)
        self.statusbar.setObjectName("statusbar")
        avgScore.setStatusBar(self.statusbar)

        self.retranslateUi(avgScore)
        QtCore.QMetaObject.connectSlotsByName(avgScore)
        
        # Create an empty python list named student_scores_listto store student scores
        self.student_scores_lst = []
        
        # When the store btn is clicked it will execute the function (store_score)
        self.btnStore.clicked.connect(self.store_score)
        self.btnAvg.clicked.connect(self.calc_avg)
        self.btnClear.clicked.connect(self.clear)

    def retranslateUi(self, avgScore):
        _translate = QtCore.QCoreApplication.translate
        avgScore.setWindowTitle(_translate("avgScore", "Avg Score"))
        self.lblScore.setText(_translate("avgScore", "Enter Student Score:"))
        self.btnStore.setText(_translate("avgScore", "Store"))
        self.btnAvg.setText(_translate("avgScore", "Average"))
        self.btnClear.setText(_translate("avgScore", "Clear"))
        self.lblStudentScore.setText(_translate("avgScore", "Stored Student Scores"))
    
    def store_score(self):
        if(self.txtScore.text().isnumeric()):
            student_score = float(self.txtScore.text())
            self.student_scores_lst.append(student_score)
            self.lstScore.addItem(str(student_score))
        else:
            msg = QtWidgets.QMessageBox()
            msg.setWindowTitle("Average Score")
            msg.setText("Please enter a numeric student score")
            msg.exec()
    
    def calc_avg(self):
        msg = QtWidgets.QMessageBox()
        msg.setWindowTitle("Average Score")
        
        if(len(self.student_scores_lst) > 0):
            avg_score = sum(self.student_scores_lst)/len(self.student_scores_lst)
            msg.setText(str(avg_score))
        else:
            msg.setText("No student scores stored")
        
        msg.exec()
        
    def clear(self):
        self.txtScore.clear()
        self.lstScore.clear()
        self.student_scores_lst.clear()
    
if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    avgScore = QtWidgets.QMainWindow()
    ui = Ui_avgScore()
    ui.setupUi(avgScore)
    avgScore.show()
    sys.exit(app.exec())
